{"version":3,"sources":["components/Calculator/Calculator.module.css","components/Display/Display.module.css","containers/App.module.css","components/Button/Button.module.css","components/Display/Display.jsx","components/Button/Button.jsx","components/Calculator/Calculator.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Display","props","ariaLabel","result","className","styles","role","aria-label","Button","onClick","value","Calculator","state","initialState","btnsVal","key","this","includes","clickEventHandler","document","addEventListener","keydownEventHandler","bind","calcOperations","prevValue","currentValue","Number","Math","sqrt","removeEventListener","prevProps","prevState","snapshot","currentVal","setState","operation","prevVal","symbol","Array","from","filter","item","length","slice","test","writeNum","setPrevNumState","choiceOperation","btnsArr","map","val","index","btnsBlock","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a177465a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__3F3wg\",\"btnsBlock\":\"Calculator_btnsBlock__108E_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__MSwjf\",\"result\":\"Display_result__3eND9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1IQbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import React from 'react';\nimport styles from './Display.module.css';\nimport PropTypes from 'prop-types';\n\n/**\n * @function\n * @module /src/components/Display\n * @description Display component\n * @param {object} props - props object\n * @example <Display result=\"12345\"/>\n */\nconst Display = (props) =>{\n    const ariaLabel = \"Current value is \" + props.result;\n    return (\n        <div className={styles.Display}>\n            <span\n                className={styles.result}\n                role=\"main\"\n                aria-label={ariaLabel}\n            >{props.result}</span>\n        </div>\n    )\n};\n\nDisplay.propTypes = {\n    result: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nexport default Display","import React from 'react';\nimport styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\n/**\n * @function\n * @module /src/components/Button\n * @description Button component\n * @param {object} props - props object\n * @example\n *\n * return <Button\n *  value=\"Calculate\"\n *  onClick={() => this.clickEventHandler(\"Calculate\")}\n * />\n */\nconst Button = (props) =>{\n    return <button\n        className={styles.Button}\n        onClick={props.onClick}\n        aria-label={props.value}\n    >{props.value}\n    </button>\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default Button;","import React, {Component} from 'react';\nimport styles from './Calculator.module.css';\n\nimport Display from '../Display/Display';\nimport Button from '../Button/Button';\n\n/**\n * @class\n * @module /src/components/Calculator\n * @description Calculator component\n * @example\n * return (\n *  <div className={styles.App}>\n *      <Calculator/>\n *  </div>\n * );\n */\nexport default class Calculator extends Component {\n    /**\n     * @constructor\n     * @description Place, where initialization of state, variables and etc.\n     * @param {object} props - props object\n     */\n    constructor(props) {\n        super(props);\n        this.state = this.initialState();\n        this.btnsVal = [\n            'C', '√', 'x²', '/',\n            '7', '8', '9', '*',\n            '4', '5', '6', '-',\n            '1', '2', '3', '+',\n            '.', '0', 'Del', '='\n        ];\n    }\n\n    /**\n     * @method\n     * @description Event handler, that allows input data using keyboard\n     * @param {string} key - name of button, that has been clicked\n     */\n    keydownEventHandler({key}){\n        if (this.btnsVal.includes(key) ){\n            this.clickEventHandler(key);\n        }else if (key === 'Backspace'){\n            this.clickEventHandler('Del');\n        }else if (key === ','){\n            this.clickEventHandler('.');\n        }else if (key === 'Enter'){\n            this.clickEventHandler('=');\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.keydownEventHandler.bind(this));\n        this.calcOperations = {\n            '/': (prevValue, currentValue) => prevValue / currentValue,\n            '*': (prevValue, currentValue) => prevValue * currentValue,\n            '+': (prevValue, currentValue) => Number(prevValue) + Number(currentValue),\n            '-': (prevValue, currentValue) => prevValue - currentValue,\n            '=': currentValue => currentValue,\n            '√': currentValue => Math.sqrt(currentValue),\n            'x²': currentValue => currentValue**2\n        };\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keydownEventHandler.bind(this));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        !this.state.currentVal && this.setState({currentVal: '0'});\n        !this.state.result && this.setState({result: '0'});\n    }\n\n    /**\n     * @method\n     * @description Method, that returns initial state\n     * @returns {Object} - initial state\n     */\n    initialState() {\n        return {\n            operation: null,\n            currentVal: 0,\n            prevVal: 0,\n        }\n    }\n\n    /**\n     * @method\n     * @description Method, that changes value of `currentVal` state variable\n     * @param {number | string} symbol - symbol, that we want to add for `currentVal` state variable\n     */\n    writeNum(symbol){\n        const value = (symbol === '.' || `${this.state.currentVal}` !== '0')\n            ? this.state.currentVal  + symbol\n            : symbol;\n        Array.from(value).filter(item => item === '.').length<2 && this.setState({currentVal: value});\n    }\n\n    /**\n     * @method\n     * @description Set prevent value of `currentVal` state variable\n     */\n    setPrevNumState(){\n        this.setState({\n            currentVal: `${this.state.currentVal}`.slice(0, -1)\n        });\n    }\n\n    /**\n     * @method\n     * @description Method, that find necessary operation for running math operation and changing current state\n     * @param {string} symbol - current choose math operation\n     */\n    choiceOperation(symbol){\n        let {operation, currentVal, prevVal} = this.state;\n        if (['√','x²'].includes(symbol)){\n            currentVal = this.calcOperations[symbol](Number(currentVal) || prevVal);\n            operation === '=' ? this.setState({operation: null, currentVal}) : this.setState({currentVal});\n            return;\n        }\n        if (operation){\n            currentVal = this.calcOperations[operation](prevVal, currentVal);\n        }\n        this.setState({\n            currentVal: 0,\n            prevVal: currentVal,\n            operation: symbol\n        });\n    }\n\n    /**\n     * @method\n     * @description Running necessary method proceeding what button has been clicked.\n     * This necessary for changing state in the future\n     * @param {string | number} symbol - name of button, that has been clicked\n     */\n    clickEventHandler(symbol) {\n        if (/(\\d|\\.)/.test(symbol)) {\n            this.writeNum(symbol);\n        }else if (symbol === 'Del') {\n            this.setPrevNumState();\n        }else if (symbol === 'C') {\n            this.setState(this.initialState());\n        }else{\n            this.choiceOperation(symbol);\n        }\n    }\n\n    render() {\n        const btnsArr = this.btnsVal.map((val, index) => {\n            return <Button\n                key={`${index}-${val}`}\n                value={val}\n                onClick={() => this.clickEventHandler(val)}\n            />\n        });\n        return (\n            <div className={styles.Calculator}>\n                <Display\n                    result={this.state.operation === '=' ? this.state.prevVal : this.state.currentVal}\n                />\n                <div className={styles.btnsBlock}>\n                    {btnsArr}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport styles from './App.module.css';\n\nimport Calculator from '../components/Calculator/Calculator';\n\n/**\n * @function\n * @module /src/containers\n * @description App component\n * @example ReactDOM.render(<App />, document.getElementById('root'));\n */\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * @version v2.1.0\n * @file Calculator web application\n * @author Artem Gusev <gusev2014russia@mail.ru> (CreativeRusBear)\n * @copyright Artem Gusev 2019-present\n * @licence\n * MIT License\n *\n * Copyright (c) 2019-present Artem Gusev\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}